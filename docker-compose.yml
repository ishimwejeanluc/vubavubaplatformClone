services:
  postgres:
    image: postgres:16
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  rabbitmq:
    build:
      context: ./rabbitmq
      args:
        COOKIE_VALUE: dev-cookie-12345678
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
  
  api-gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8000
      - MERCHANT_SERVICE_URL=http://merchant-service:4000
      - ORDER_SERVICE_URL=http://order-service:7000
      - RIDER_SERVICE_URL=http://rider-service:5000
      - PAYMENT_SERVICE_URL=http://payment-service:6000
      - JWT_SECRET=ishimwejeanluc
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      auth-service:
        condition: service_started
      merchant-service:
        condition: service_started
      order-service:
        condition: service_started
      rider-service:
        condition: service_started
      payment-service:
        condition: service_started
    restart: on-failure

  auth-service:
    build: ./auth-service
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - DB_NAME=authservicevv
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - INSTANCE_ID=*****
      - BEAMS_SECRET_KEY=*****************
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure

  merchant-service:
    build: ./merchant-service
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - DB_NAME=merchantservicevv
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    restart: on-failure

  order-service:
    build: ./order-service
    ports:
      - "7000:7000"
    environment:
      - PORT=7000
      - DB_NAME=orderservicevv
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    restart: on-failure

  payment-service:
    build: ./payment-service
    ports:
      - "6000:6000"
    environment:
      - PORT=6000
      - DB_NAME=paymentservicevv
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    restart: on-failure

  rider-service:
    build: ./rider-service
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - DB_NAME=riderservicevv
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    restart: on-failure

  notification-service:
    build: ./notification-service
    ports:
      - "2000:2000"
    environment:
      - PORT=2000
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      rabbitmq:
        condition: service_started
    restart: on-failure

volumes:
  postgres_data:
  rabbitmq_data:
